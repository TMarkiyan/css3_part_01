/* Прості селектори.
--------------------------------------- */

/* x (селектор елемента)

Всі елементи ПЕВНОГО ТИПУ

IE6+, решта всі
---------------------------------------*/ 
a {
	text-decoration: none;
}
p {
	margin: 10px 0;
}

/* * (зірочка)

ВСІ елементи
Створює невиправдане сильне
навантаження на браузер
Вихід - перерахунок всіх необхідних тегів
(або класів) в рядок

IE6+, решта всі
---------------------------------------*/
* {
	margin: 0;
}
table * {
	border: 1px solid black;
}

/* # (решітка)

Елемент, який має визначене в html-коді
значення id
Всі id мають бути унікальними, тому
повторне використання у межах однієї
сторінки виключене
По можливості намагайтесь використовувати
назви тегів, класи або псевдокласи

IE6+, решта всі
---------------------------------------*/
#header {
	width: 999px;
	height: 100px;
}

/* . (крапка)

Елемент, який має визначене в html-коді
значення class
Класи дозволяється застосовувати зразу
до декількох елементів

IE6+, решта всі
---------------------------------------*/
.right {
	text-align: right;
}


/* Складені селектори (Комбінатори).
--------------------------------------- */

/* x y (нащадок)

Одна з найбільш розповсюджених конструкцій
Виділяємо всередині батьківського блоку
елементи визначеного ТИПУ, незалежно від
їх рівня вкладеності

(Початківці-верстальники часто пишуть довгі
конструкції - ul li p a.red, додаючи будь-який
клас, що є грубою помилкою. У таких випадках
є зміст створити окремий стиль .red, який
можна буде використати і до інших елементів)

IE6+, решта всі
---------------------------------------*/
ul li {
	font-style: italic;
}

/* x > y (дочірні елементи)

Відмінність від селектора нащадка у тому,
що він обирає не всі елементи визначеного типу
всередині батьківського блоку, а тільки
елементи ПЕРШОГО РІВНЯ, які безпосередньо вкладені
всередину батька

IE7+, решта всі
---------------------------------------*/
div > span {
	color: red;
}

<div>
	<p>
		<span>цей текст не буде змінено</span>
	</p>
	<span>а цей текст буде червоним</span>
</div>

/* x + y (сестринські елементи)

Визначений елемент всередині загального
батьківсього блоку ТІЛЬКИ якщо той йде
ЗРАЗУ ЗА вказаним першим в селекторі

IE7+, решта всі
---------------------------------------*/
div + p {
	font-weight: bold;
}

<div>
	<p>цей абзац не буде змінено</p>
</div>
<p>тут текст стане полужирним</p>
<div>
	<p>а цей абзац такий же як і наступний</p>
</div>
<blockquote>
	<p>залишиться без змін</p>
</blockquote>

/* x ~ y (сестринські елементи)

Відмінність від (+) в тому, що будуть
обрані ВСІ елементи всередині загального
батьківського блоку, які йдуть у вказаному
порядку

IE7+, решта всі
---------------------------------------*/
div ~ p {
	font-weight: bold;
}

<div>
	<p>цей абзац не буде змінено</p>
</div>
<p>тут текст стане полужирним</p>
<div>
	<p>цей абзац залишиться без змін</p>
</div>
<p>а цей так само стане полужирним</p>


/* Селектори атрибутів.
--------------------------------------- */

/* x[attr]

ТІЛЬКИ ті елементи, які МАЮТЬ вказаний
атрибут

IE7+, решта всі
---------------------------------------*/
a[title] {
	color: orange;
}

/* x[attr="string"]

Всі елементи <a>, href яких веде
на https://www.gismeteo.ua/ua/
Атрибут має мати ТОЧНЕ значення
для співпадіння

IE7+, решта всі
---------------------------------------*/
a[href="https://www.gismeteo.ua/ua/"] {
	font-weight: bold;
}

/* x[attr*="string"]

Ті елементи, атрибут яких має у своєму складі
вказану строку
(https://www.gismeteo.ua/ua/weather-lviv-4949/
https://www.gismeteo.ua/ua/weather-ternopil-4951/)

IE7+, решта всі
---------------------------------------*/
a[href*="meteo"] {
	font-weight: bold;
}

/* x[attr^="string"]

Ті елементи, атрибут яких ПОЧИНАЄТЬСЯ
з вказаної строки

IE7+, решта всі
---------------------------------------*/
a[title^="Article"] {
	text-transform: uppercase;
}

/* x[attr$="string"]

Ті елементи, атрибут яких ЗАКІНЧУЄТЬСЯ
вказаною строкою

IE7+, решта всі
---------------------------------------*/
div[class$="last"] {
	margin-bottom: 0;
}

/* x[attr~="string"]

Той елемент, в атрибуті якого є тільки
вказана строка АБО відділена пробілами
від інших частин

IE7+, решта всі
---------------------------------------*/
p[class~="inline"] {
	display: inline-block;
}

<p class="inline">цей блок буде змінено</p>
<p class="inline right">так само цей</p>
<p class="inlineContainer">блок буде проігноровано</p>

/* Групування

Всі селектори атрибутів можна групувати

IE7+, решта всі
---------------------------------------*/
img[alt][title] {
	/* будь-які стилі */
}

a[title][href^="http"] {
	padding-left: 20px;
	background: url(/img/icons/http.png) 0 50% no-repeat;
}


/* Псевдокласи.
--------------------------------------- */

/* Специфікація CSS3 вказує на використання
двох двокрапок '::' перед вказуванням
на псевдоклас, проте з метою зберігання
сумісності з старими версіями браузерів
дозволяється використовувати ':',
що і рекомендуєтся робити. */

/* :checked

Ті елементи (<input type="checkbox">),
які відмічені або вибрані

IE9+, решта всі
---------------------------------------*/
input[type="checkbox"]:checked {
	background: black;
}

/* :hover

Самий розповсюджений
Динамічно до тих елементів,
на які наведено курсор мишки

(Слід враховувати, що в IE6
застосовується тільки до посилань)

IE6+, решта всі
---------------------------------------*/
a:hover {
	text-decoration: none
}

/* :after

Дозволяє додати після вибраного елементу
будь-який контент і застосувати до нього стиль

(Після елементу з класом clearfix
створюється пустий елемент і до нього
застосовуються стилі, які забороняють
обтікання елементів)

IE8+, решта всі
---------------------------------------*/
.clearfix:after {
	content: "";
	display: block;
	clear: both;
	visibility: hidden;
	font-size: 0;
	height: 0;
}

/* :not(selector)

Всі блоки div за виключенням того,
в якого є id="content"

(У другому прикладі буде вибрано всі елементи
за виключенням параграфів <p>)

IE8+, решта всі
---------------------------------------*/
div:not(#content) {
	display: none;
}

*:not(p) {
	font-size: 12px;
}

/* :first-child

ПЕРШИЙ дочірній елемент

(Забрати border з першого елементу списка)

IE7+, решта всі
---------------------------------------*/
ul li:first-child {
	border-top: 0;
}

/* :last-child

ОСТАННІЙ дочірній елемент

(Забрати border з останнього елементу списка)

IE9+, решта всі
---------------------------------------*/
ul li:last-child {
	border-bottom: 0;
}

/* :only-child

Вибирає елемент у батьківському блоці,
якщо той є ОДНИМ ЄДИНИМ

IE9+, решта всі
---------------------------------------*/
div p:only-child {
	color: red;
}

<div>
	<p>цей текст стане червоним</p>
</div>
<div>
	<p>ці два абзаци</p>
	<p>залишаться без змін</p>
</div>

/* :only-of-type

Елемент визначеного типу у батьківському блоці,
якщо той є ОДНИМ ЄДИНИМ У СВОЄМУ ТИПІ

IE9+, Mozilla3,5+, решта всі
---------------------------------------*/
div p:only-of-type {
	color: red;
}

<div>
	<p>цей текст стане червоним</p>
	<span>цей текст залишиться без змін</span>
</div>
<div>
	<p>ці два абзаци</p>
	<p>залишаться без змін</p>
</div>

/* :first-of-type

Елемент ВИЗНАЧЕНОГО ТИПУ у батьківському блоці,
який йде ПЕРШИМ серед інших свого типу

IE9+, Mozilla3,5+, решта всі
---------------------------------------*/
div p:first-of-type {
	color: red;
}

<div>
	<span>цей текст залишиться без змін</span>
	<p>цей текст стане червоним</p>
	<p>ці два абзаци</p>
	<p>залишаться без змін</p>
</div>

/* :nth-child(n)

Виділяється визначений по порядку елемент

(Другий елемент списку)

IE9+, Mozilla3,5+, решта всі
---------------------------------------*/
ul li:nth-child(2) {
	color: red;
}

<ul>
	<li>текст</li>
	<li>текст стане червоним</li>
	<li>текст</li>
</ul>

/* :nth-last-child(n)

Якщо є великий список з змінною кількістю
елементів і необхідно вибрати
САМЕ ПЕРЕДОСТАННІЙ

IE9+, Mozilla3,5+, решта всі
---------------------------------------*/
ul li:nth-last-child(2) {
	color: red;
}

<ul>
	<li>текст</li>
	<li>100500-ий елемент</li>
	<li>текст стане червоним</li>
	<li>останній</li>
</ul>

/* :nth-of-type(n)

Визначений по порядку елемент серед інших
такого самого типу

IE9+, Mozilla3,5+, решта всі
---------------------------------------*/
ul:nth-of-type(3) li {
	color: red;
}

/* :nth-last-of-type(n)

Визначений по порядку з кінця елемент
серед інших такого самого типу

IE9+, Mozilla3,5+, решта всі
---------------------------------------*/
ul li:nth-last-of-type(2) {
	color: red;
}